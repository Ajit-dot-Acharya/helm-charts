<source>
	pos_file /tmp/nginx_access.pos
	path /var/log/nginx/access1.log
	tag "#{ENV['DEEPINSIGHT_PROJECT_NAME']}.#{ENV['DEEPINSIGHT_APPLICATION_NAME']}.metric.nginx-access"
	@type tail
	<parse>
		@type none
	</parse>
</source>

<filter **.metric.nginx-access>
	@type parser
	key_name message
	<parse>
		time_format %d/%b/%Y:%H:%M:%S %z
                <pattern>
                        format regexp
                        expression /^(?<host>[^ ]*)\s(?<user>[^ ]*)\s\[(?<time>[^\]]*)\]\s\"(?<method>[^ ]*)\s(?<path1>\/[a-z,A-Z,\/]*)(?<id1>\d+)(?<path2>[a-z,A-Z,\/]+)(?<id2>\d+)(?<path3>[a-z,A-Z,\/]*)\s(?<header>[^ ]*)\"\s(?<code>[^ ]*)\s(?<size>[^ ]*)\s\"(?<referer>[^"]*)\"\s\"(?<agent>[^"]*)\"\s\"(?<referer2>[^"]*)\"\s(rt=(?<request_time>[^ ]*))\s(uct=(?<upstream_connect_time>[^ ]*))\s(uht=(?<upstream_header_time>[^ ]*))\s(urt=(?<upstream_response_time>[^ ]*))$/
			time_format %d/%b/%Y:%H:%M:%S %z
                        types request_time:float,upstream_connect_time:float,upstream_header_time:float,upstream_response_time:float
		</pattern>
                <pattern>
                        format regexp
                        expression /^(?<host>[^ ]*)\s(?<user>[^ ]*)\s\[(?<time>[^\]]*)\]\s\"(?<method>[^ ]*)\s(?<path1>\/[a-z,A-Z,\/]*)(?<id>\d+)(?<path2>[a-z,A-Z,\/]*)\s(?<header>[^ ]*)\"\s(?<code>[^ ]*)\s(?<size>[^ ]*)\s\"(?<referer>[^"]*)\"\s\"(?<agent>[^"]*)\"\s\"(?<referer2>[^"]*)\"\s(rt=(?<request_time>[^ ]*))\s(uct=(?<upstream_connect_time>[^ ]*))\s(uht=(?<upstream_header_time>[^ ]*))\s(urt=(?<upstream_response_time>[^ ]*))$/
                        time_format %d/%b/%Y:%H:%M:%S %z
                        types request_time:float,upstream_connect_time:float,upstream_header_time:float,upstream_response_time:float
                </pattern>
                <pattern>
                        format regexp
                        expression /^(?<host>[^ ]*)\s(?<user>[^ ]*)\s\[(?<time>[^\]]*)\]\s\"(?<method>[^ ]*)\s(?<path>[^"]*)\?([^\s]*)\s(?<header>[^ ]*)\"\s(?<code>[^ ]*)\s(?<size>[^ ]*)\s\"(?<referer>[^"]*)\"\s\"(?<agent>[^"]*)\"\s\"(?<referer2>[^"]*)\"\s(rt=(?<request_time>[^ ]*))\s(uct=(?<upstream_connect_time>[^ ]*))\s(uht=(?<upstream_header_time>[^ ]*))\s(urt=(?<upstream_response_time>[^ ]*))$/
                        time_format %d/%b/%Y:%H:%M:%S %z
                        types request_time:float,upstream_connect_time:float,upstream_header_time:float,upstream_response_time:float
                </pattern>
                <pattern>
                        format regexp
                        expression /^(?<host>[^ ]*)\s(?<user>[^ ]*)\s\[(?<time>[^\]]*)\]\s\"(?<method>[^ ]*)\s(?<path>[^"]*)\s(?<header>[^ ]*)\"\s(?<code>[^ ]*)\s(?<size>[^ ]*)\s\"(?<referer>[^"]*)\"\s\"(?<agent>[^"]*)\"\s\"(?<referer2>[^"]*)\"\s(rt=(?<request_time>[^ ]*))\s(uct=(?<upstream_connect_time>[^ ]*))\s(uht=(?<upstream_header_time>[^ ]*))\s(urt=(?<upstream_response_time>[^ ]*))$/
                        time_format %d/%b/%Y:%H:%M:%S %z
                        types request_time:float,upstream_connect_time:float,upstream_header_time:float,upstream_response_time:float
                </pattern>
                <pattern>
                        format regexp
                        expression /^(?<host>[^ ]*)\s-(?<referer1>[^\[]*)-\s\[(?<time>[^\]]*)\]\s\"(?<method>[^ ]*)\s(?<path>[^"]*)([^\s]*)\s(?<header>[^ ]*)\"\s(?<code>[^ ]*)\s(?<size>[^ ]*)\s\"(?<referer2>[^"]*)\"\s\"(?<agent>[^"]*)\"$/
                        time_format %d/%b/%Y:%H:%M:%S %z
                        #types request_time:float,upstream_connect_time:float,upstream_header_time:float,upstream_response_time:float
                </pattern>
		@type multi_format
		types request_time:float,upstream_connect_time:float,upstream_header_time:float,upstream_response_time:float,size:integer
	</parse>
</filter>

<filter **.metric.nginx-access>
	enable_ruby
	@type record_transformer
	<record>
		node "#{Socket.gethostname}"
		_documentType "nginxAccessLogs"
		file "${tag_suffix[1]}"                
		path "${if record['path'] != nil then record['path'] elsif record['id2'] == nil then record['path1'] + '[id]' + record['path2'] else record['path1'] + '[id]' + record['path2'] + '[id]' + record['path3'] end}"
		time "${require 'time'; time.to_time.to_i * 1000}"
		_plugin "nginx"
                level "info"
                _tag_podName "#{ENV['POD_NAME']}"
                _nodeName "#{ENV['NODE_NAME']}"
                _tag_appName "#{ENV['DEEPINSIGHT_APPLICATION_NAME']}"
                _tag_projectName "#{ENV['DEEPINSIGHT_PROJECT_NAME']}"
		
	</record>
</filter>


<filter **.metric.nginx-access>
        @type geoip
        geoip2_database /opt/GeoLite2-City/GeoLite2-City.mmdb
        geoip_lookup_keys host
        backend_library geoip2_c
        <record>
                city ${city.names.en["host"]}
                latitude ${location.latitude["host"]}
                longitude ${location.longitude["host"]}
                country ${country.iso_code["host"]}
                country_name ${country.names.en["host"]}
                postal_code ${postal.code["host"]}
                region_code ${subdivisions.0.iso_code["host"]}
                region_name ${subdivisions.0.names.en["host"]}
        </record>
</filter>

