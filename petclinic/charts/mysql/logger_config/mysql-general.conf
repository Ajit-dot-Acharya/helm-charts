<source>
        pos_file /tmp/mysql-general-query.pos
        path /var/log/mysql/mysql.log, /var/log/mysql.log
        tag "#{ENV['DEEPINSIGHT_PROJECT_NAME']}.#{ENV['DEEPINSIGHT_APPLICATION_NAME']}.metric.mysql-general"
        @type tail
        <parse>
                @type none
        </parse>
</source>

<filter **.metric.mysql-general>
        @type parser
        key_name message
        <parse>
                <pattern>
                        format regexp
                        expression /(?<time>[^ ]* [^ ]*)\s*(?<id>\S+)\s(?<command>[^ ]*)\s(?<argument>[^\t].*)$/
                </pattern>
                <pattern>
                        format regexp
                        expression /\"(?<time>[^\]]*)\"\W+(?<user1>\S+)\W+(?<user2>\w+)\W+(?<host>\w+)\W+(?<IP>(\d+\.\d+\.\d+\.\d+))\W+(?<pid1>\d+)\W+(?<pid2>\d+)\W+(?<command>.\w*)\W+(?<argument>.*)\"/
                </pattern>
                <pattern>
                        format regexp
                        expression /\"(?<time>[^\]]*)\"\W+(?<user1>\S+)\W+(?<user2>\w+)\W+(?<host>\w+)\W+(?<pid1>\d+)\W+(?<pid2>\d+)\W+(?<command>.\w*)\W+(?<argument>.*)\"/
                </pattern>
                @type multi_format
        </parse>
</filter>

<filter **.metric.mysql-general>
        enable_ruby
        @type record_transformer
        <record>
                node "#{Socket.gethostname}"
                _plugin "mysql"
                time "${require 'time'; time.to_time.to_i * 1000}"
                file "${tag_suffix[1]}"
                _documentType "mysqlAccessLogs"
                message ""
                level "info"
                _tag_podName "#{ENV['POD_NAME']}"
                _nodeName "#{ENV['NODE_NAME']}"
                _tag_appName "#{ENV['DEEPINSIGHT_APPLICATION_NAME']}"
                _tag_projectName "#{ENV['DEEPINSIGHT_PROJECT_NAME']}"
        </record>
</filter>
