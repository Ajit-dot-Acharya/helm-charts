apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "keycloak.fullname" . }}
  labels:
    {{- include "keycloak.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "keycloak.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "keycloak.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "keycloak.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443
          livenessProbe:
            httpGet:
              path: /auth/realms/master
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 120
          readinessProbe:
            httpGet:
              path: /auth/realms/master
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 120
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: certs
            mountPath: /etc/x509/https
            readOnly: true
          env:          
          - name: X509_CA_BUNDLE
            value: /etc/x509/https/tls.crt /etc/x509/https/tls.key
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                key:  db_username
                name: {{ .Release.Name }}-auth
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                key:  db_password
                name: {{ .Release.Name }}-auth
          - name: DB_ADDR
            value: {{ .Values.postgres.db_host | quote }}
          - name: DB_PORT
            value: {{ .Values.postgres.db_port | quote }}
          - name: DB_DATABASE
            value: {{ .Values.postgres.db_name | quote }}
          - name: PROXY_ADDRESS_FORWARDING
            value: "true"
          - name: DB_VENDOR
            value: "postgres"
          - name: KEYCLOAK_USER
            valueFrom:
              secretKeyRef:
                key:  keycloak_username
                name: {{ .Release.Name }}-auth
          - name: KEYCLOAK_PASSWORD
            valueFrom:
              secretKeyRef:
                key:  keycloak_password
                name: {{ .Release.Name }}-auth
      volumes:
        - name: certs
          secret:
            secretName: {{ .Release.Name }}-tls
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
