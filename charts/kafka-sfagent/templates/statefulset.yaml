{{- $advertisedListenersOverride := first (pluck "advertised.listeners" .Values.configurationOverrides) }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "kafka.fullname" . }}
  labels:
    app: {{ include "kafka.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{ default "snappyflow/appname" .Values.global.sfappname_key }}: {{ default .Release.Name .Values.global.sfappname }}
    {{ default "snappyflow/projectname" .Values.global.sfprojectname_key }}: {{ default .Release.Name .Values.global.sfprojectname }}
spec:
  selector:
    matchLabels:
      app: {{ include "kafka.name" . }}
      release: {{ .Release.Name }}
      service: kafka
      {{ default "snappyflow/appname" .Values.global.sfappname_key }}: {{ default .Release.Name .Values.global.sfappname }}
      {{ default "snappyflow/projectname" .Values.global.sfprojectname_key }}: {{ default .Release.Name .Values.global.sfprojectname }}
  serviceName: {{ include "kafka.fullname" . }}-headless
  podManagementPolicy: {{ .Values.podManagementPolicy }}
  updateStrategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
  replicas: {{ default 3 .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ include "kafka.name" . }}
        release: {{ .Release.Name }}
        service: kafka
        {{ default "snappyflow/appname" .Values.global.sfappname_key }}: {{ default .Release.Name .Values.global.sfappname }}
        {{ default "snappyflow/projectname" .Values.global.sfprojectname_key }}: {{ default .Release.Name .Values.global.sfprojectname }}
    spec:
{{- if .Values.schedulerName }}
      schedulerName: "{{ .Values.schedulerName }}"
{{- end }}
{{- if .Values.rbac.enabled }}
      serviceAccountName: {{ .Release.Name }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - {{ include "kafka.name" . }}
                  - key: "release"
                    operator: In
                    values:
                    - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
      initContainers:
      - name: get-jolokia
        image: alpine
        command:
          - sh
          - -c
          - -x
          - apk add --no-cache curl && curl ${JOLOKIA_JAR_URL} -o /agent/jolokia.jar
        env:
          - name: JOLOKIA_JAR_URL
            value: https://repo1.maven.org/maven2/org/jolokia/jolokia-jvm/1.6.2/jolokia-jvm-1.6.2-agent.jar
        volumeMounts:
          - name: javaagentdir
            mountPath: /agent
      containers:
      - name: kafka-broker
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        livenessProbe:
          exec:
            command:
              - sh
              - -ec
              - /usr/bin/jps | /bin/grep -q SupportedKafka
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: kafka
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        ports:
        - containerPort: 9092
          name: kafka
        - containerPort: 8778
          name: jolokia
        {{- if .Values.additionalPorts }}
{{ toYaml .Values.additionalPorts | indent 8 }}
        {{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KAFKA_LOG4J_OPTS
          value: -Dlog4j.configuration=file:///etc/customlog4j/connect-log4j.properties
        - name: KAFKA_HEAP_OPTS
          value: {{ .Values.heapOptions }}
        {{- if not (hasKey .Values.configurationOverrides "zookeeper.connect") }}
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: {{ include "zookeeper.url" . | quote }}
        {{- end }}
        {{- if not (hasKey .Values.configurationOverrides "log.dirs") }}
        - name: KAFKA_LOG_DIRS
          value: {{ printf "%s/%s" .Values.persistence.mountPath .Values.logSubPath | quote }}
        {{- end }}
        {{- range $key, $value := .Values.configurationOverrides }}
        - name: {{ printf "KAFKA_%s" $key | replace "." "_" | upper | quote }}
          value: {{ $value | quote }}
        {{- end }}
        - name: KAFKA_JMX_OPTS
          value: "-javaagent:/agent/jolokia.jar=port=8778,host=127.0.0.1 -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false"
        # This is required because the Downward API does not yet support identification of
        # pod numbering in statefulsets. Thus, we are required to specify a command which
        # allows us to extract the pod ID for usage as the Kafka Broker ID.
        # See: https://github.com/kubernetes/kubernetes/issues/31218
        command:
        - sh
        - -exc
        - |
          export KAFKA_BROKER_ID=${HOSTNAME##*-} && \
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.{{ include "kafka.fullname" . }}-headless.${POD_NAMESPACE}:9092{{ include "kafka.configuration.advertised.listeners" . }} && \
          exec /etc/confluent/docker/run
        volumeMounts:
        - name: datadir
          mountPath: {{ .Values.persistence.mountPath | quote }}
        - name: connect-log4j-properties
          mountPath: /etc/customlog4j
        - name: varlog
          mountPath: /var/log/kafka
        - name: javaagentdir
          mountPath: /agent     
      - name: sfagent
        image:  "{{ .Values.sfagent.image }}:{{ .Values.sfagent.imageTag }}"
        imagePullPolicy: {{ .Values.sfagent.imagePullPolicy | quote }}
        command:
        - /app/sfagent
        - -enable-console-log
        env:
        - name: APP_NAME
          value: {{ .Values.global.sfappname }}
        - name: PROJECT_NAME
          value: {{ .Values.global.sfprojectname }}
        resources:
{{ toYaml .Values.sfagent.resources | indent 12 }}
        volumeMounts:
        - name: varlog
          mountPath: /var/log/kafka
        - name: sfagent-config-kafka
          mountPath: /opt/sfagent/config.yaml
          subPath: config.yaml
      volumes:
      - emptyDir: {}
        name: javaagentdir
      {{- if not .Values.persistence.enabled }}
      - name: datadir
        emptyDir: {}
      {{- end }}
      - name: varlog
        emptyDir: {}
      - name: sfagent-config-kafka
        configMap:
          name: {{ include "kafka.fullname" . }}-sfagent-kafka
      - name: connect-log4j-properties
        configMap:
          name: {{ include "kafka.fullname" . }}-kafka-log
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.beta.kubernetes.io/storage-class: {{ .Values.persistence.storageClass }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
  {{- end }}
