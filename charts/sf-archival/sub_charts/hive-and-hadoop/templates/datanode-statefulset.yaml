apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hadoop.fullname" . }}-datanode
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hadoop.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hadoop.name" . }}-datanode
      app.kubernetes.io/instance: {{ .Release.Name }}
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: datanode
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      volumeMode: Filesystem
  serviceName: {{ include "hadoop.datanode.service" . }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "hadoop.name" . }}-datanode
        app.kubernetes.io/instance: {{ .Release.Name }}
        release: {{ .Release.Name }}
        {{ .Values.global.snappyflowProjectLabel}}: {{ .Values.global.snappyflowProjectName }}
        {{ .Values.global.snappyflowAppLabel }}: {{ .Values.global.snappyflowAppName }}
    spec:
      priorityClassName: {{ .Release.Name }}-priority-class
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if and (eq .Values.global.secrets.aws.enable true) (eq .Values.global.secrets.aws.use_iam_role true) }}
      serviceAccountName: {{ .Release.Name }}-service-account
      {{- end}}
      initContainers:
        - name: namenode-ready
          image: busybox:1.28
          command: ['sh', '-c', "until nslookup {{ include "hadoop.namenode.service" . }}; do echo waiting for namenode; sleep 2; done"]
      containers:
        - name: datanode
          image: "{{ .Values.image.datanode.repository }}:{{ .Values.image.datanode.tag }}"
          imagePullPolicy: {{ .Values.image.datanode.pullPolicy }}
          volumeMounts:
          - name: datanode
            mountPath: /hadoop/dfs/data
          {{- if (eq .Values.global.secrets.gcs.enable true) }}
          - name: google-cloud-key
            mountPath: /var/secrets/google
          {{- end }}
          envFrom:
          - configMapRef:
              name: {{ template "hive-and-hadoop.fullname" . }}-env
          env:
          - name: HADOOP_HEAPSIZE
            value: "750"
          {{- if (eq .Values.global.secrets.gcs.enable true) }}
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/secrets/google/key.json
          {{- end }}
          {{- if (eq .Values.global.secrets.aws.enable true) }}
          {{- if (eq .Values.global.secrets.aws.use_iam_role false) }}
          - name: AWS_ACCESS_KEY_ID
            value: {{ .Values.global.secrets.aws.AWS_ACCESS_KEY_ID }}
          - name: AWS_SECRET_ACCESS_KEY
            value: {{ .Values.global.secrets.aws.AWS_SECRET_ACCESS_KEY }}
          - name: AWS_REGION
            value: {{ .Values.global.secrets.aws.AWS_DEFAULT_REGION }}
          {{- end }}
          {{- end }}
          resources:
{{- toYaml .Values.containerResources.datanode | nindent 12 }}
          ports:
            - name: datanode
              containerPort: {{ .Values.service.datanode.port }}
              protocol: TCP
          startupProbe:
            tcpSocket:
              port: datanode
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 20
            timeoutSeconds: 9
          livenessProbe:
            tcpSocket:
              port: datanode
            initialDelaySeconds: 300
            periodSeconds: 60
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
{{- toYaml .Values.containerResources.datanode | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if (eq .Values.global.secrets.gcs.enable true) }}
      volumes:
        - name: google-cloud-key
          secret:
            secretName: {{ .Values.global.secrets.gcs.secret }}
      {{- end}}
