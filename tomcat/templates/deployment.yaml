apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "tomcat.fullname" . }}
  labels: {{- include "tomcat.labels" . | nindent 4 }}
spec:
  strategy:
    type: {{ .Values.updateStrategy }}
    {{- if (eq "Recreate" .Values.updateStrategy) }}
    rollingUpdate: null
    {{- end }}
  selector:
    matchLabels: {{- include "tomcat.matchLabels" . | nindent 6 }}
  template:
    metadata:
      labels: {{- include "tomcat.labels" . | nindent 8 }}
    {{- if .Values.podAnnotations }}
    annotations: {{- toYaml .Values.podAnnotations | nindent 8 }}
    {{- end }}
    spec:
{{- include "tomcat.imagePullSecrets" . | indent 6 }}
      {{- if .Values.affinity }}
      affinity: {{- include "tomcat.tplValue" (dict "value" .Values.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "tomcat.tplValue" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "tomcat.tplValue" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
        runAsUser: {{ .Values.securityContext.runAsUser }}
      {{- end }}
      initContainers:
        - name: volume-permissions
          image: {{ template "tomcat.volumePermissions.image" . }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | quote }}
          command:
            - /bin/bash
            - -ec
            - |
              chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.fsGroup }} /bitnami/tomcat
          securityContext:
            runAsUser: 0
          {{- if .Values.volumePermissions.resources }}
          resources: {{- toYaml .Values.volumePermissions.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /bitnami/tomcat
      containers:
        - name: tomcat
          image: "{{ .Values.tomcat.image }}:{{ .Values.tomcat.imageTag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          env:
            - name: TOMCAT_USERNAME
              value: {{ .Values.tomcatUsername | quote }}
            - name: TOMCAT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "tomcat.fullname" . }}
                  key: tomcat-password
            - name: TOMCAT_ALLOW_REMOTE_MANAGEMENT
              value: {{ .Values.tomcatAllowRemoteManagement | quote }}
          securityContext:
            fsGroup: 0
            runAsUser: 0
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 120
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 51
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /bitnami/tomcat
            - name: varlog
              mountPath: /opt/bitnami/tomcat/logs
{{- if .Values.tomcatplugin.sfagent.enabled }}
        - name: sfagent
          image:  "{{ .Values.tomcatplugin.sfagent.image }}:{{ .Values.tomcatplugin.sfagent.imageTag }}"
          imagePullPolicy: {{ .Values.tomcatplugin.sfagent.imagePullPolicy | quote }}
          command:
          - /app/sfagent
          - -enable-console-log
          env:
          - name: APP_NAME
            value: "{{ .Values.global.sfappname }}"
          - name: PROJECT_NAME
            value: "{{ .Values.global.sfprojectname }}"
          resources:
{{ toYaml .Values.tomcatplugin.sfagent.resources | indent 12 }}
          volumeMounts:

          {{- if .Values.tomcatplugin.sfagent.enabled }}
          - name: sfagent-config
            mountPath: /opt/sfagent/config.yaml
            subPath: config.yaml
          - name: varlog
            mountPath: /opt/bitnami/tomcat/logs
          {{- end }}
{{- end }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ template "tomcat.pvc" . }}
          {{- else }}
          emptyDir: {}
          {{- end -}}
{{- if .Values.tomcatplugin.sfagent.enabled }}
        - name: sfagent-config
          configMap:
             name: sfagent-tomcat-{{ .Release.Name }}
        - name: varlog
          emptyDir: {}
{{- end }}
