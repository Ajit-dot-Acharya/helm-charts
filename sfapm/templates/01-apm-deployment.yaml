apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sfapm.fullname" . }}-server
  labels:
    {{- include "sfapm.labels" . | nindent 4 }}
    app: sfapm
    role: server
spec:
  replicas: {{ .Values.sfapm.replicaCount }}
  selector:
    matchLabels:
      {{- include "sfapm.selectorLabels" . | nindent 6 }}
      app: sfapm
      role: server
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "sfapm.selectorLabels" . | nindent 8 }}
        app: sfapm
        role: server
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "sfapm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.sfapm.image.repository }}:{{ .Values.sfapm.image.tag }}"
          imagePullPolicy: {{ .Values.sfapm.image.pullPolicy }}
          env:
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-postgresql
                  key: postgresql-password
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "sfapm.fullname" . }}-server
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "sfapm.fullname" . }}-server
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "sfapm.fullname" . }}-server
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: {{ include "sfapm.fullname" . }}-server
                  key: DB_USER
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "sfapm.fullname" . }}-server
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "sfapm.fullname" . }}-server
                  key: REDIS_PORT                                    
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            httpGet:
              path: /snappyflow/status
              port: http
          readinessProbe:
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            httpGet:
              path: /snappyflow/status
              port: http
          resources:
            {{- toYaml .Values.sfapm.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /data/snappyflow
              name: data
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data
          emptyDir: {}
